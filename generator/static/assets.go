// Code generated by fileb0x at "2019-08-29 16:11:56.977631 -0700 PDT m=+0.002737632" from config file "assets.toml" DO NOT EDIT.
// modification hash(df3c040732900322213a0d2f1497cab9.e17f13136a3154d6a6bbde0013668fb9)

package static

import (
	"bytes"
	"compress/gzip"
	"context"
	"io"
	"net/http"
	"os"
	"path"

	"golang.org/x/net/webdav"
)

var (
	// CTX is a context for webdav vfs
	CTX = context.Background()

	// FS is a virtual memory file system
	FS = webdav.NewMemFS()

	// Handler is used to server files through a http handler
	Handler *webdav.Handler

	// HTTP is the http file system
	HTTP http.FileSystem = new(HTTPFS)
)

// HTTPFS implements http.FileSystem
type HTTPFS struct {
	// Prefix allows to limit the path of all requests. F.e. a prefix "css" would allow only calls to /css/*
	Prefix string
}

// FileAcronymsJSON is "acronyms.json"
var FileAcronymsJSON = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x8a\xe6\x52\x50\x50\x72\xf4\xf5\x54\xd2\x01\x31\x5c\xfc\x82\x21\x0c\x67\x7f\xdf\x00\xd7\x10\xcf\x10\x4f\x7f\x3f\x25\xae\x58\x2e\x40\x00\x00\x00\xff\xff\xf5\x6c\x11\x85\x26\x00\x00\x00")

// FileEnumTmpl is "enum.tmpl"
var FileEnumTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xcc\x5a\x6f\x73\xdb\xb8\xd1\x7f\x2d\x7e\x8a\x3d\x4e\xf2\x3c\x64\xaa\xd0\xbe\x76\x3a\xd3\xc9\xd5\x2f\x32\x8e\xeb\xfa\x9a\x38\x6e\xe4\x74\xe6\x26\x93\xf1\xc1\x24\x28\xa1\x26\x41\x1e\x01\xc9\xd2\xa8\xfa\xee\x9d\x05\x40\x12\xa4\x48\x8a\xd2\xdd\x65\xfa\x22\x13\x19\xd8\xbf\x3f\xec\x2e\x16\x00\xb7\xdb\xd7\x10\xd1\x98\x71\x0a\xee\x82\x92\x88\x16\xee\x6e\xe7\x9c\x9d\xc1\x65\x16\x51\x98\x53\x4e\x0b\x22\x69\x04\x8f\x1b\x28\x28\x5f\xa6\xe0\xcd\x99\x5c\x2c\x1f\x83\x30\x4b\xcf\xe6\x94\x9f\x87\x2c\xa2\x67\x6a\xca\x47\xb6\x77\x1f\xe1\xf6\xe3\x3d\x5c\xbd\xbb\xb9\xff\x0e\xff\xd6\x4c\xab\xed\x36\x58\xd1\x42\xb0\x8c\xef\x76\x8e\x93\x93\xf0\x89\xcc\x29\x6c\xb7\x81\xf9\x89\xa3\x2c\xcd\xb3\x42\x82\xe7\x4c\x26\x2e\x2d\x8a\xac\x10\xae\x03\x00\xe0\xc6\xa9\x74\x71\x70\xc9\x59\x98\x45\xd4\xfe\x7d\xb6\x94\xf1\x5f\x5c\xc7\x77\xb6\x5b\xca\x23\x78\x8d\x72\x6c\x97\xd4\xff\x4c\xb2\x8c\x1b\xb7\xb6\xdb\x20\xcc\x78\xcc\xe6\xc1\x15\x5f\xa6\x37\xef\x76\x3b\x60\x02\x88\xe5\xa9\xdc\xe4\x14\x48\xc2\x88\x80\x38\x2b\x40\x2e\x68\x17\x13\xba\x15\x38\x8a\xb6\x63\xb6\x1e\xba\xce\x82\xfb\x4d\x8e\xfe\xa1\x59\x68\x63\xdb\x44\x94\x84\xc6\x85\x19\x17\xe8\x3d\xce\xbd\xc0\xc1\x5b\x92\x52\x78\x73\x01\x4d\xe9\xca\x47\x45\xb3\x22\x85\xc0\xf9\x88\x85\x12\xdc\x84\x08\x99\xc5\xb1\xa0\xd2\x85\x73\x43\x04\x05\xe1\x73\x0a\x2f\x8a\x1b\x1e\xd1\xf5\x14\x59\x92\x65\x43\xe6\xbf\x70\x40\xa0\x4d\x13\x25\x13\xa5\x7c\x54\x52\x90\x2a\x4f\x96\xe1\x53\x53\xb4\xd6\xfa\x1f\x88\x59\x21\x24\xec\x76\xdb\x2d\xbc\xc8\x2a\x06\xb1\x7c\x34\x4a\xb4\xe4\x52\xb5\x51\x00\x2c\x06\xfa\x4b\x49\x71\x47\x44\x48\x12\x70\x1f\xdc\xdd\xee\xec\x0c\x66\x4f\x2c\xcf\x69\x04\x6a\x72\xbb\xa5\x89\xa0\x6a\x7c\xbb\x2d\xe9\x0b\x1a\xb3\x35\x8d\x34\x9f\x59\x38\x0e\x3a\xc0\x94\x36\xb5\x5e\x7a\x49\x2a\x04\x77\xbb\x40\xc5\x46\xe9\x22\x8b\x4b\xfd\x97\x59\x9a\x52\x2e\x71\xc2\x56\x63\x0d\x9b\x25\xdb\x67\x7d\x47\x45\x58\xb0\x5c\xea\x78\x6e\xb0\xb7\xa6\x6a\x11\x30\xe0\x49\x0d\x8d\xc1\xeb\x5c\x41\x6b\x39\x01\x17\xc0\x32\x49\x34\x21\xa7\x70\x5e\xc1\xbe\xdb\xc1\x1f\xc0\x5a\x06\x64\x54\x1a\x35\x86\x86\xde\x5e\x59\x9b\x72\x5f\x45\xaf\xb4\x17\x0f\x6a\x89\x51\x80\x0a\x82\x66\x5c\xe8\x1f\x3a\xb8\x2d\x8f\x51\x7d\x19\x6c\x77\xc9\x72\xce\xb8\x08\x50\x9d\xc8\x49\x48\x83\x2b\x4e\x1e\x13\xaa\x72\x02\xe0\x61\x3f\x91\x2a\x4a\xb8\x80\x9f\xeb\xe9\x7d\x41\xd5\xaf\xdd\xee\x67\xa5\xb7\xca\xb5\x49\x87\xd8\xbb\xa7\xb9\x4a\xae\x86\xd0\xeb\x2c\xb8\xd3\xc5\x48\xc3\xf1\x73\x1f\xeb\x1d\x91\x8b\x3e\x56\x9c\x43\x56\xdf\x71\x56\xa4\xc0\x5a\x76\x76\x06\x57\x45\xf1\x99\xeb\x74\x8f\xf6\x25\xe2\xff\x3a\x59\x98\x00\xb9\x28\xb2\x67\x0e\xcf\x0b\xca\xe1\x8e\x14\x82\xee\xd3\x7b\x02\x84\x2c\x18\x9f\xfb\x10\x12\xce\x33\x09\x49\x16\x12\x49\x81\x60\x16\xb0\x48\x27\x44\x59\xba\xf2\x22\x5b\xb1\x88\x46\x86\x27\x70\x26\x63\xad\xb9\x00\x5d\x84\x83\x5b\xfa\xec\xb9\x46\x15\x8b\x28\x97\x2c\xde\xd4\x4a\x2a\x05\x2a\xb4\x5d\x1f\x5d\xdf\x6e\x41\xd2\x34\x4f\xd0\x2a\x57\x2b\xa6\x85\x0b\x81\xaa\x7d\x67\x67\x7d\x9e\x01\x91\xc8\x26\x05\xc8\x0c\xc2\x8c\xaf\x68\x21\x81\x18\xcb\x71\x8c\x74\xd4\x5a\x27\x5e\xf2\xb0\x17\x2b\x8e\xcb\x5c\xc2\xe5\xed\x13\x4c\xb5\x93\x3e\x6c\x9d\x09\x8b\x21\xa1\x5c\xb1\xf8\xf0\x57\xf8\x1e\xc7\x26\x05\x95\xcb\x82\x77\xe8\xf5\xce\xfd\xe9\xd8\x95\x75\x26\x3b\xc7\x99\xa8\x92\x39\x05\x95\x45\xb8\x6d\x05\xef\x28\x6e\x61\x9f\x96\x9c\xde\xf0\x99\xb2\x51\x2b\x57\xa6\xe8\x02\x7b\x61\x48\x91\xe8\x0a\x2d\xfd\xad\x8d\x12\xcf\x4c\x86\x0b\x94\x1a\x12\x41\xc1\x6c\xab\xc1\x8d\x78\x9f\x3d\xd3\xc2\x53\x56\xf8\x6f\x9c\x09\xc6\xb1\xa4\x42\xaa\x35\x17\x9c\x3c\xd1\x07\x64\x70\x26\x68\xeb\x7a\x0a\xd9\x13\xba\xd5\x91\x30\x4a\xd7\x17\xf4\xeb\xeb\x0f\x48\x85\xf6\x97\x0e\xac\xa7\xc0\x59\xe2\x4c\x94\x25\x0d\x0d\x61\x96\xa6\x84\x47\xaf\xc7\xe9\xb8\xd4\xd4\x27\xaa\x22\x29\x4d\x2e\xc7\xe9\x41\xd2\x91\x5a\xda\x78\x7e\xce\xf3\x5e\x3c\xf5\x3e\x30\xce\x06\x4d\x7b\x9a\xab\xb3\xcb\x4f\x57\x6f\x3f\xdc\xdc\x5e\x3f\x5c\xbe\x9d\x5d\x1d\xd6\x35\x0b\x0b\x4a\x52\xc6\xe7\x63\x7d\x8e\x68\x4c\x96\x89\x7c\xf3\xdb\xc6\xe8\x6f\x23\x4a\xef\x4c\x1d\xdb\xd1\x3d\x5d\xe3\x3e\x87\x85\xe9\x03\x29\xc4\x82\x24\x6a\x84\xa5\x79\x42\xb1\x13\x10\xaa\x90\x4a\x1c\x4b\xf5\x7c\x42\x0b\x48\xa9\x5c\x64\x91\xae\x3e\xde\xba\xc3\x38\xdf\x96\xe6\xf9\xe0\x7d\xf9\xfa\xb8\x91\xd4\xae\x38\xc6\x31\x3d\xe1\xad\x03\x53\x04\x7c\x5f\x43\xaa\x8b\xe5\x67\x9e\x1e\xb0\x6a\xc9\xfb\xed\x7a\xd5\x65\x58\x43\xa4\xa7\x64\x68\x1b\x7c\x6d\x1c\xda\xc6\x4d\xf7\xa9\x8b\xa7\x22\xf2\x9d\x89\x4c\x73\xe5\x00\xce\x0c\xd5\x5c\x5d\xc3\x90\xf0\xbb\x0b\xf4\xc5\x2e\x5b\xb4\x28\x70\x5d\x27\xaf\xd6\x70\x01\x32\xcd\x2b\x1c\xb4\xcf\x65\xb7\xd6\xb3\x5a\xb3\x7f\xbe\x37\x8b\x35\x0b\x09\x6f\xe3\x81\x63\x9c\x16\xc0\xb8\xa4\x45\x8c\x9d\xc1\x30\x12\x48\xef\xe9\xe6\xb1\x62\xd9\xee\x2c\x18\x70\x17\xb7\x36\x91\xba\x62\xae\x10\x02\xdd\xce\x79\xd8\x73\xfa\x55\x0d\xd5\x94\x98\x03\x5c\x37\x19\x2b\x33\xa1\x31\xb6\x26\x0c\xb6\x2b\xdf\x10\x70\x96\xe0\xac\x02\xa6\x33\xda\x6b\x10\x55\xca\x61\x72\x7c\x83\x15\x41\xb0\x4d\x87\xd2\x44\x3b\x2a\xd8\x8a\x16\x7a\xae\x13\xf3\x2e\xc8\x15\x35\xe6\x83\xe6\xd6\x07\x85\x8e\xac\xa8\xd3\x61\x3a\x2e\x32\xfe\x96\x90\xb9\x28\x63\x83\xee\xa5\xca\x75\x96\x10\x3e\x87\x38\x21\xe6\xd8\x53\x1b\x0c\x68\xef\xa1\x48\xa1\x12\x03\xa5\x6a\x26\xea\x08\x39\x08\xff\x8a\x24\xbe\x01\x77\xe5\xd8\x98\x6b\x68\xaf\x87\x6d\xbd\xa6\x52\xda\xe8\x8e\x31\xf6\x9a\x62\xc5\xb1\x22\xda\xc2\xf5\xd5\xda\xe8\xc5\x73\x69\x5b\xb1\x75\xb8\x17\x79\xfc\xfd\x9f\xce\x72\x44\x15\x5a\x78\x1d\xd0\x8e\x82\x3d\xbf\xec\xdb\x6a\xcd\xee\x3e\xb1\x7b\x78\x59\x2f\xb3\x88\x8a\x60\xa6\x0c\x35\xab\xfb\x3e\xcb\x9e\x96\xf9\xe8\x06\xb2\xe3\x34\x8e\x04\x4c\xfe\xbf\x00\xfa\xcb\x92\xad\x68\x42\xb9\xec\x3a\xc7\xeb\xfc\xd6\xde\xf6\x29\xf5\x58\xd4\xa5\x61\x4c\xbb\xf9\x30\xb0\xf7\x7e\x20\xf9\x97\x4e\x65\x7e\xbd\x05\xf7\x6f\x8c\x2c\x32\x59\x33\x51\x67\x50\x84\x15\x8b\x80\x50\x17\x03\x07\x36\xd4\x38\x95\x81\xea\x35\x63\xcf\x7d\x79\xef\xbd\x5c\xf9\x78\x32\xc1\xee\xbf\x3c\x61\x74\x39\x26\x8b\x0d\x7c\x79\x29\xbe\xba\x53\x60\x91\xfe\xa7\x03\x40\x04\x3f\x66\x8c\x7b\x7d\xa7\xbb\x29\xb8\x53\x70\x7d\xdf\x1c\x95\xf1\xc4\xfa\x3b\xd9\x58\x59\xe6\xdb\xc7\x72\x9d\x0b\xea\xb6\xab\x95\x0b\x38\x36\xba\xaa\x21\xb1\x4e\x39\xd8\x3a\x00\xc6\x7a\xc6\xa5\xb7\xf6\x0f\xc7\xf8\x8f\xb3\x8f\xb7\xcd\x16\x44\x8d\xb4\x0c\xfa\xb7\xc8\x78\x60\xe6\xc7\x5b\x66\x09\x1c\xec\x42\x6c\xe9\x76\x2f\xd2\x6e\x43\x7a\x2d\xab\x28\x8e\xd8\x7f\x1b\x52\xbd\xc7\xfd\x36\x04\xf7\xdf\xf2\xc0\xeb\x00\x98\x2d\xec\xcd\x45\x4b\xa5\xf7\x38\x85\xff\x13\xfe\x0f\xcd\x0d\x0e\xa0\x5a\x09\x3b\x60\xb4\xf0\xaa\x6b\xc2\x22\xa5\x9c\x52\xd9\xfe\x06\x5e\xae\x5c\x05\x8f\xef\x00\xec\xc6\x6d\xb0\xe2\xf7\xeb\x77\x7e\x7a\xfb\xe1\x7d\x33\x34\xd4\x48\x6b\x01\x36\x24\x4d\x4e\x0e\x0d\x14\x88\xa1\x61\xed\x17\xa3\xf6\xe3\x46\x58\xf4\x5a\xf5\xab\xc2\x42\x99\x56\xad\x94\xda\xfa\xbc\xfd\x46\x6d\x4c\xbc\x54\x42\xbc\x5f\x13\x27\xca\xcb\xce\x38\xf9\x76\x81\x52\x05\x4c\xe3\x1a\xb9\xba\x66\xa9\xae\x92\x7b\x2a\x2e\x5c\xe0\x46\x6c\x20\x62\xf1\xe6\x61\xc9\x23\x5a\x88\x30\x2b\x68\x19\x7c\x80\x1b\x73\xbf\x14\x7d\x04\xed\x94\x95\xeb\x3b\xdd\x71\x72\xd4\x71\xba\x53\x8c\x3a\x93\x8f\x94\x52\x1d\x52\x3b\x25\x89\x72\x76\xac\x4d\xfa\x2a\xa1\xdb\x2a\x3d\xd7\x94\x64\xb2\x56\xef\xae\xbb\x1d\xc6\x5f\xdf\x56\xa7\xba\x7a\x4e\x52\x16\x6f\x4a\x19\xe6\x42\xac\x8f\x41\xaf\xbf\x00\x02\x09\x13\x12\xb2\x18\xf2\x4c\x08\xf6\x98\x94\xa7\x0c\x1d\x8b\x02\x67\xf6\x65\x98\x24\xeb\x11\xee\xf9\xf0\xe5\x6b\xdd\xa3\xc9\x34\xc7\xc0\x4d\xc9\x13\xf5\xca\xf1\xa9\xba\x10\xeb\x73\x07\xf7\xec\x30\xcb\x37\x9e\x0a\xfc\x5e\xaa\x2a\x8a\x31\xa2\x77\xfa\x5e\xb4\xef\x9e\x68\x96\x30\x75\xd7\xbb\xdd\x6a\xc7\x2c\xa4\xa0\x17\x2a\xf3\x86\x31\x80\x55\xfd\x44\x30\xf8\xa6\x83\xc7\xb8\x5e\xcc\xb4\x16\x05\x5a\xd7\x83\x4f\x1b\xc0\xae\x16\xa9\x07\xcc\xda\xf3\x83\x88\x5a\xa4\x2d\x58\xf5\xa5\xbb\x7e\x00\x1b\x42\x58\x83\x8b\x35\x2d\xb7\xc1\x0d\x92\xec\x99\x16\xea\x10\x3a\x20\xc1\xba\x7b\x6a\xca\xd9\xcf\xfb\x5e\x19\xf5\x1d\x5a\x4b\x44\x3b\xe7\x7b\x25\x34\x6f\xa5\x5a\x52\xba\xf2\xbd\xdf\x16\xeb\xde\xb0\x6d\xcd\x5e\xae\xf7\x4a\xf9\x40\x72\xcd\xdc\xc2\xf4\x20\x90\x2d\xc6\x63\x41\x6c\xb3\x1f\x0f\x60\x5b\xc2\x29\xe0\xed\x59\xd1\x01\x1c\x1e\xc8\x75\xa1\x69\x5f\xd7\x98\x4d\x6b\x6c\xc3\x52\x76\x20\xd6\xd9\x92\xc5\xf8\xc7\x81\x83\xd4\x7a\xef\xcc\x24\x64\xd1\xb8\x5c\x1c\x7f\x02\x3b\xf7\xbf\x9a\xde\x67\xc6\xc9\x13\xbd\xc4\x9c\x29\x6b\x0f\xfa\xa4\x8a\x0d\xc1\x3a\x54\x5f\x93\x57\xaf\x2f\x83\xce\x95\xe2\xfe\x57\xfc\xab\xaf\xa5\x7b\x1c\xb4\x08\xc6\x38\x58\x93\x1f\xe7\x61\x95\x2d\xa7\xf9\x59\xb3\x0f\x7a\x7b\x59\xbe\x03\xf4\x38\x1b\x1e\xe7\x6c\x25\xee\x38\x5f\xcb\xcc\x3e\xcd\xd5\x8a\x7b\x38\x6e\xcb\x34\x1f\xf0\xb6\xf9\x54\x30\x2e\x7e\x6d\xb1\xc7\x79\x6d\x57\xa4\xd3\x3c\x6f\x48\x18\x5e\x67\x5d\xa0\x86\x56\xda\x7a\x7c\x1a\xb7\xd6\xb5\xc8\x23\x57\xbb\xaa\xa1\x27\xae\x77\xcd\xdf\xef\x73\x4f\xfd\xfe\x07\xe3\x91\x68\x94\xee\x27\x35\xd2\x2a\xdc\x48\x66\xf5\x56\xc6\xb9\x2c\x36\xf7\x94\xfa\x7b\x8b\xb2\xa9\x9a\xb3\x15\xe5\x90\x52\x21\xc8\xfc\x40\x29\x47\xb9\x36\x58\xea\xac\x36\x8c\x96\xb2\xb8\x06\xca\x3a\xb5\x21\x54\xea\x10\x56\x8d\xf4\xb2\x1f\x8d\xd3\x2c\x5b\x16\x21\x6d\x22\x15\x2f\x93\xa4\x1b\x2e\x4d\x5d\x03\xa6\x5e\x28\xb2\x42\x42\x4e\xe4\x02\x22\x56\xd0\x50\x26\x1b\x90\x99\x7e\xbe\xa9\x3b\xce\xbe\xa4\x52\xf2\x8e\x04\xca\x98\x7c\x3a\x54\xa5\x80\xa3\xc1\xba\x23\x72\xd1\x01\x55\xae\x86\x7f\x67\xa8\x50\xf7\x91\x40\x29\x73\x4f\x87\x49\xb3\x1f\xd8\x43\xab\x4f\x4a\x1a\xd5\x46\xbd\x00\x99\x2c\xca\x49\x41\x39\xba\xad\xbf\x8a\xd3\xc9\xc4\xc4\x28\x97\x2b\xe9\x5d\x17\xee\xfd\x9f\xbe\x38\xe6\x23\x34\xfd\x71\x50\xf7\x77\x2c\xe0\xba\xe6\xe2\xe9\x46\xad\x8b\x1a\xb3\x7d\xc0\xa5\x6d\xac\x59\xa7\x3f\x83\x0e\xd4\x92\xc7\xdb\x8f\xd4\x4e\xf5\x3d\x5d\x75\x11\x32\xf4\xa1\x91\xf1\xa3\xfe\xbb\xd5\x87\xd2\x94\x49\x49\x8b\x9a\x21\x1a\xdb\x91\x56\x1c\xcd\xc8\xeb\x77\xa0\x62\x68\xba\xd0\xe3\x81\xf5\x35\x19\xfa\xd0\x93\x75\x16\x55\x33\xf9\x22\x7b\xa2\x95\x7e\xb6\xe8\x1e\x38\xde\x51\x49\x58\x32\x1e\x0c\x4b\xe4\x91\x89\x68\x7b\x30\x9c\x8f\x03\xb1\xd1\x10\xd2\x9b\x95\xd6\x7d\xeb\xeb\xfe\xf7\xa6\x9f\xde\x7e\xba\xbb\x1c\x80\x5c\xcd\x2b\xd2\x06\xe0\x1b\x52\xe4\xe1\x43\xa8\xc6\x5b\x78\xdf\x67\x5a\x66\x0f\xd6\x6a\xf2\x13\x15\x79\xc6\x8f\x78\x76\x30\x42\x3d\x1f\x94\x66\xf3\xc5\x96\x7a\xcd\x30\xb8\x87\x03\xa8\xd7\x4e\x74\x62\x1e\xb6\x2a\x60\x5b\xc5\x67\xfe\xc4\xb3\x67\x6e\x2a\x9d\x12\xa6\xbf\x51\xda\xbb\x06\xae\xf9\x6e\xc4\x4c\x12\xb9\x14\xf6\xf3\xe4\xb0\x8b\xb5\x5c\xcf\x87\x57\xb6\x2c\x2d\xc9\xaa\x17\xf6\xe4\x2d\x7d\x8e\xbd\x75\x50\x01\x34\x85\x75\x60\xa4\xf8\x4e\xfb\x6b\xdc\xfe\x38\xf8\xfb\xfd\xfd\xdd\x40\x18\xe0\xf4\x7e\x14\x2c\xa4\xcc\xfb\x82\x40\x09\xec\x89\x01\x9c\x3b\x21\x04\x90\xcd\x7a\x7b\x3a\xb0\xe8\x95\xc9\xa3\xd6\xfc\xcf\x7f\x3c\x3f\x02\xad\x8f\xb3\xab\x35\x93\x03\x78\x69\x82\x7d\xc4\x32\xf1\x40\xd7\x4c\x7e\x43\xd0\xb4\x25\xe3\x61\xb3\x2c\x1f\x05\xdc\xf7\xce\xfe\x27\xdf\x1d\xb8\xe9\x84\xe9\x07\xec\x83\xee\xa5\x9b\x68\xa5\xe5\x60\x0b\x28\x43\xbc\x7f\xac\x11\x0b\xdc\xa3\x0d\x1b\x58\xbb\xc2\x81\xf7\x21\xcd\x70\xe4\x7d\x84\x31\xee\xc4\x4b\x89\x92\xfb\xe8\xd6\x53\x21\xd9\xc4\x49\x95\x82\x5e\xb4\x3a\x6b\x95\x7e\xf3\x19\x19\x45\x65\x55\x3a\x02\x1d\x6d\xe5\x69\xd8\x18\xde\x81\x9d\xad\x6c\x27\xca\x3d\xee\xbf\x01\x00\x00\xff\xff\xf9\xdb\x97\x8e\xde\x31\x00\x00")

func init() {
	err := CTX.Err()
	if err != nil {
		panic(err)
	}

	var f webdav.File

	var rb *bytes.Reader
	var r *gzip.Reader

	rb = bytes.NewReader(FileAcronymsJSON)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "acronyms.json", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileEnumTmpl)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "enum.tmpl", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	Handler = &webdav.Handler{
		FileSystem: FS,
		LockSystem: webdav.NewMemLS(),
	}

}

// Open a file
func (hfs *HTTPFS) Open(path string) (http.File, error) {
	path = hfs.Prefix + path

	f, err := FS.OpenFile(CTX, path, os.O_RDONLY, 0644)
	if err != nil {
		return nil, err
	}

	return f, nil
}

// ReadFile is adapTed from ioutil
func ReadFile(path string) ([]byte, error) {
	f, err := FS.OpenFile(CTX, path, os.O_RDONLY, 0644)
	if err != nil {
		return nil, err
	}

	buf := bytes.NewBuffer(make([]byte, 0, bytes.MinRead))

	// If the buffer overflows, we will get bytes.ErrTooLarge.
	// Return that as an error. Any other panic remains.
	defer func() {
		e := recover()
		if e == nil {
			return
		}
		if panicErr, ok := e.(error); ok && panicErr == bytes.ErrTooLarge {
			err = panicErr
		} else {
			panic(e)
		}
	}()
	_, err = buf.ReadFrom(f)
	return buf.Bytes(), err
}

// WriteFile is adapTed from ioutil
func WriteFile(filename string, data []byte, perm os.FileMode) error {
	f, err := FS.OpenFile(CTX, filename, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, perm)
	if err != nil {
		return err
	}
	n, err := f.Write(data)
	if err == nil && n < len(data) {
		err = io.ErrShortWrite
	}
	if err1 := f.Close(); err == nil {
		err = err1
	}
	return err
}

// WalkDirs looks for files in the given dir and returns a list of files in it
// usage for all files in the b0x: WalkDirs("", false)
func WalkDirs(name string, includeDirsInList bool, files ...string) ([]string, error) {
	f, err := FS.OpenFile(CTX, name, os.O_RDONLY, 0)
	if err != nil {
		return nil, err
	}

	fileInfos, err := f.Readdir(0)
	if err != nil {
		return nil, err
	}

	err = f.Close()
	if err != nil {
		return nil, err
	}

	for _, info := range fileInfos {
		filename := path.Join(name, info.Name())

		if includeDirsInList || !info.IsDir() {
			files = append(files, filename)
		}

		if info.IsDir() {
			files, err = WalkDirs(filename, includeDirsInList, files...)
			if err != nil {
				return nil, err
			}
		}
	}

	return files, nil
}

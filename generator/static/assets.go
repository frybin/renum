// Code generated by fileb0x at "2019-08-22 20:38:33.489667 -0700 PDT m=+0.002817840" from config file "assets.toml" DO NOT EDIT.
// modification hash(4176d7df813fc72bebc1a48a04d2b4c3.7447d4379844870d2512dbd61417b28e)

package static

import (
	"bytes"
	"compress/gzip"
	"context"
	"io"
	"net/http"
	"os"
	"path"

	"golang.org/x/net/webdav"
)

var (
	// CTX is a context for webdav vfs
	CTX = context.Background()

	// FS is a virtual memory file system
	FS = webdav.NewMemFS()

	// Handler is used to server files through a http handler
	Handler *webdav.Handler

	// HTTP is the http file system
	HTTP http.FileSystem = new(HTTPFS)
)

// HTTPFS implements http.FileSystem
type HTTPFS struct {
	// Prefix allows to limit the path of all requests. F.e. a prefix "css" would allow only calls to /css/*
	Prefix string
}

// FileEnumTmpl is "enum.tmpl"
var FileEnumTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xcc\x5a\x5b\x73\xdb\xb8\x15\x7e\x36\x7f\xc5\x59\x4d\xdc\x92\xa9\x42\x7b\xdb\xe9\x8b\x77\xfc\xb0\x13\xbb\x6e\xb6\x71\xec\xae\xbc\x9d\xd9\xf1\x64\x14\x88\x04\x25\x54\x24\xc0\x25\x20\x45\xaa\xca\xff\xde\x39\x00\x48\x81\x14\xa9\x4b\x52\xa7\x7d\xc8\x44\x02\x0e\xce\xe5\x3b\x57\x40\xde\x6c\xde\x40\x4c\x13\xc6\x29\x0c\x66\x94\xc4\xb4\x18\x94\xa5\x77\x71\x01\x6f\x45\x4c\x61\x4a\x39\x2d\x88\xa2\x31\x4c\xd6\x30\x15\x6f\x28\x5f\x64\xb8\x79\xf3\x00\x1f\x1e\x9e\xe0\xf6\xe6\xdd\xd3\x77\x9e\x97\x93\x68\x4e\xa6\x14\x36\x9b\xd0\x7e\x2c\x4b\xcf\x63\x59\x2e\x0a\x05\xbe\x07\x00\x30\x48\x32\x35\xf0\x02\x6f\xb3\xa1\x3c\x86\x37\xb8\xef\x4a\xd6\xff\x33\xc5\x04\xb7\xd2\x37\x9b\x30\x12\x3c\x61\xd3\xf0\x96\x2f\xb2\x77\x37\x65\x09\x4c\x02\x71\x14\x52\xeb\x9c\x02\x49\x19\x91\x90\x88\x02\xd4\x8c\x76\x1d\x42\x85\x43\x4f\xd3\x76\xec\x6e\x97\xee\x44\xf8\xb4\xce\x51\x6f\x54\x0b\x75\x6c\xab\x88\x9c\x50\xb9\x48\x70\x89\x56\xe1\xde\x2b\x5c\xfc\x40\x32\x0a\x57\xd7\xd0\xe4\xae\x6d\xd4\x34\x4b\x52\x48\xdc\x8f\x59\xa4\x60\x90\x12\xa9\x44\x92\x48\xaa\x06\x70\x69\x89\xa0\x20\x7c\x4a\xe1\x55\xf1\x8e\xc7\x74\x35\xc4\x23\xe9\xa2\xc1\xf3\x1f\xb8\x20\x51\xa7\x33\xcd\x13\xb9\x3c\x68\x2e\x48\x95\xa7\x8b\x68\xde\x64\x6d\xa4\xfe\x1b\x12\x56\x48\x05\x65\xb9\xd9\xc0\x2b\x51\x1f\x90\x8b\x89\x15\x62\x38\x57\xa2\xad\x00\x60\x09\xd0\xdf\x2a\x8a\x47\x22\x23\x92\xc2\x60\x3c\x28\xcb\x8b\x0b\x18\xcd\x59\x9e\xd3\x18\xf4\xe6\x66\x43\x53\x49\xf5\xfa\x66\x53\xd1\x17\x34\x61\x2b\x1a\x9b\x73\xd6\x71\x5c\x7b\xc2\x1c\x32\xfe\x32\x2e\xa9\x11\x2c\xcb\x50\xc7\x06\x6a\xe0\x72\x7b\x2b\xb2\x8c\x72\x55\x59\xce\x92\x4a\xad\x1b\x2a\xa3\x82\xe5\x18\x33\xed\x33\xad\x2d\xeb\xd1\xb2\xf4\x60\x8f\x96\x5b\xb3\x2d\x16\x97\x1a\x36\x47\x41\xb8\x06\x26\x14\x31\x84\x9c\xc2\x65\x0d\x69\x59\xc2\x1f\xc0\x81\x18\x0f\x6a\x89\x06\x1f\x4b\xef\x7a\xcd\xa5\xdc\x15\xd1\xcb\xed\xd5\x58\xbb\x0f\x19\x68\x07\x37\x7d\x6e\x3e\x98\xc0\x75\x2c\x46\xf1\x55\x20\x3d\xa6\x8b\x29\xe3\x32\x44\x71\x32\x27\x11\x0d\x6f\x39\x99\xa4\x54\xc7\x3b\xc0\x78\x37\x49\x6a\x4a\xb8\x86\x4f\xdb\xed\x5d\x46\xf5\xa7\xb2\xfc\xa4\xe5\xd6\x79\x74\xd6\xc1\xf6\x71\x3e\xd5\x89\xd3\x60\x7a\x27\xc2\x47\x53\x40\x0c\x1c\x9f\xfa\x8e\x3e\x12\x35\xeb\x3b\x8a\x7b\x78\x34\xd0\x30\x28\x9a\xe5\x29\x51\x14\x06\x52\x15\x8c\x4f\x69\x31\x80\x50\x27\xf7\xc5\x05\x3c\x92\x42\xd2\x8e\xba\x40\x14\x1e\x53\x12\x94\x80\x48\xf0\x25\x2d\x14\x10\x30\x0c\x70\x8d\x74\x14\x13\x2f\x59\xf0\xa8\x8f\xa3\xcf\xd1\x56\xc3\x20\x00\x7f\x97\x60\x08\xb4\x28\x44\x11\xc0\xc6\x3b\x63\x09\xac\x86\x20\xe6\xe8\xea\x0e\xf3\x75\xc6\x3e\x23\xc3\x8f\x3f\x20\xd5\xc6\x3b\x3b\x2b\xa8\x5a\x14\x1c\x8f\x71\x96\x7a\x67\x3a\xe8\xd1\xeb\x48\x25\x75\x95\xa9\x48\x3a\x74\xbb\x0c\x86\x90\x64\x2a\xbc\x45\x0d\x12\x7f\x70\x2e\x31\x65\xb9\x40\x9b\x97\x24\x65\x31\x74\xe9\xab\x8a\x35\x3c\x9f\xcb\x8f\x83\x21\xa0\x94\xa1\xb5\x4e\x86\x3f\x09\xc6\xfd\xbe\x40\x1a\xc2\x60\x08\x83\x20\xb0\x59\x89\xc9\xf1\x02\xda\x59\x9d\x02\x37\xf7\x4d\x56\x74\xa4\xc2\x13\x5d\x61\x8e\x61\x3c\xdc\x93\x42\xce\x48\xaa\x57\x58\x96\xa7\x14\x4b\x8f\xd4\xbd\x45\xe1\x5a\x66\xf6\x53\x5a\x40\x46\xd5\x4c\xc4\xc6\xe9\xfe\x0a\x5e\xef\x2a\x11\xb8\xec\xfc\x00\xfc\xe7\x8f\x93\xb5\xa2\xae\xa7\xad\xd5\x66\xc3\x5f\x85\x23\x0d\xa1\x1f\x04\xc6\x8f\x26\x48\x7f\xe1\xd9\x01\xb5\x16\xfc\x44\xc5\x1a\x2c\x7d\xcd\xc3\xe8\x10\x18\xe5\x50\x37\x6e\xdb\x9a\x71\xab\x26\x0a\xbc\x33\x95\xe5\xda\x00\xdc\xd9\x17\xeb\x81\x0e\x63\x24\xfc\xee\x1a\x6d\x71\xa3\x94\x16\x85\x0e\xd1\xd7\x2b\xb8\x06\x95\xe5\x35\x0e\xc6\xe6\xaa\x0d\xf4\xb8\x6b\xf4\xf7\xf7\xd6\x5b\xa3\x88\xf0\x36\x1e\xb8\xc6\x69\x01\x8c\x2b\x5a\x24\x58\x96\xf6\x23\x81\xf4\xbe\xe9\x4a\xf5\x91\x4d\xe9\xc0\xb0\x24\x05\x38\xc9\xeb\x79\x67\xf2\x33\x53\xd1\x0c\x96\x08\x81\xe9\x25\x3e\x36\x33\xed\xd0\x88\xc8\x8a\xf2\xca\x3b\x33\x18\x5e\xc3\xd2\x6e\x18\x8c\x9d\x0d\x8b\xed\x32\xb0\x04\x9c\xa5\xb8\xab\x81\xe9\x4c\x85\x2d\x88\x36\xcf\xbf\x89\x47\x10\x6c\x33\x27\xb4\xd0\x8e\x0b\xb6\xa4\x85\xd9\xeb\xc4\xbc\x0b\x72\x4d\x8d\xf9\x60\x4e\x9b\x09\xa4\x23\x2b\xb6\xe9\x30\x3c\x2e\x32\xfe\x92\x92\xa9\xac\x62\x83\xee\xa4\xca\x9d\x48\x09\x9f\x42\x92\x12\x3b\x4f\x6d\x15\x06\xd4\xf7\x50\xa4\x50\x85\x81\x52\x17\xf1\x6d\x84\x1c\x84\x7f\x49\xd2\xc0\x82\xbb\xf4\x5c\xcc\x0d\xb4\x77\xfb\x75\xbd\xa3\x4a\xb9\xe8\x1e\xa3\xec\x1d\xc5\x8a\xe3\x44\xb4\x83\xeb\xeb\x95\x95\x8b\x03\x6f\x5b\xf0\x94\xa9\xd9\x62\x12\x46\x22\xbb\x90\x79\xf2\xfd\x9f\x2e\x72\x44\x15\x5a\x78\x1d\x90\x8e\x8c\xfd\xa0\xea\x97\x5b\xc9\x83\x8e\x4a\x7d\xd8\xad\x78\x11\x91\xe1\x48\x2b\x6a\xbd\xfb\x5e\x88\xf9\x22\x3f\xba\x71\x77\x8c\xf9\x48\xc0\xd4\xef\x25\xd0\xdf\x16\x6c\x49\x53\xca\x55\xd7\x05\xc1\xe4\xb7\xb1\xb6\x4f\xa8\xdf\x68\x41\xb5\x84\x63\xda\xfc\x78\x4f\x9b\xbf\x27\xf9\x73\xa7\xb0\x60\xa7\xed\x77\x93\xfd\x77\x66\x81\x27\xff\x7c\x19\x9c\x38\x0f\xb0\xd8\xfc\xfb\x56\x13\xc1\x91\x3a\xd6\x9a\xb5\xe7\x82\xea\xb6\xdb\xca\x05\x5c\x3b\xba\xaa\x21\xb1\x49\x39\xd8\x78\x00\x56\x7b\xc6\x95\xbf\x0a\x0e\xc7\xf8\x4f\xa3\x87\x0f\xcd\x19\x44\xaf\xb4\x14\xfa\xa7\x14\x3c\xb4\xfb\x27\xf4\x38\x87\xe3\xde\x31\xc4\x65\xef\x0e\x23\xed\x39\xa4\x57\xb5\x9a\xe2\x04\xe5\x1a\x5c\xfd\xc9\xee\x1c\x82\x0d\x58\x56\xdd\x17\xc0\xf6\xb0\xab\xeb\x96\x48\x7f\x32\x84\xdf\xc9\xe0\x87\x66\x87\x03\xa8\x5d\xe1\x46\x8c\x61\x5e\x8f\x4d\x58\xa5\xb4\x51\x3a\xdd\xaf\xe0\x7c\x39\xd0\xf0\x04\x1e\x40\x79\x5c\x87\x95\x2f\x37\xf0\xfc\xfa\xe3\xfd\xfb\x66\x6c\xe8\x95\x96\x03\xd6\x24\x4b\xbf\x3c\x36\x90\x23\xc6\x86\xd3\x31\x8e\xea\xc8\x8d\xb8\xe8\x55\xeb\xab\xe2\x42\xab\x56\xbb\x4a\x37\x3f\x7f\x77\x54\x3b\x26\x60\x6a\x26\xfe\xd7\x04\x8a\xb6\xb2\x33\x50\xbe\x5d\xa4\xd4\x11\xd3\x78\xa1\xaa\x2f\xb8\xf5\x2b\x55\x4f\xcd\x85\x6b\x6c\xc5\xb0\xe0\x31\x2d\x64\x24\x0a\x3a\x36\x47\x59\xb2\xae\xa2\x0f\xb0\x35\x7b\xf6\xc5\xa5\x1d\x91\xf6\x45\x68\x9f\x98\x27\xa6\x52\x2a\xad\xa0\x5c\xd3\xb3\x7f\xf5\xc9\x69\x3e\xb9\xc1\xb6\x59\x95\x25\x3a\xb3\xaf\x73\xe8\x21\x99\x93\xcc\x61\x67\xef\xf5\x7d\x07\x0c\x98\x12\x08\xa4\x4c\x2a\x10\x09\xe4\x42\x4a\x36\x49\xab\xa1\xdd\x38\x56\xe2\xce\x2e\x0f\x1b\xb1\x3d\xcc\xfd\x00\x9e\x3f\x6e\x47\x1e\x95\xe5\x18\x05\x19\x99\x53\xbf\x5a\x1f\x42\x4a\xfb\x1b\x21\xb6\xc0\x48\xe4\x6b\x5f\x47\x51\x2f\x55\x1d\x12\x18\x1e\xa5\x7d\xe9\x31\x2f\xaa\x3d\x60\xdd\x93\x5c\x43\x05\x19\xc9\x9b\xd0\x6b\xb0\x4c\x4e\xef\x5c\xa4\x6c\x30\x1d\xdb\xff\xaa\xca\xe0\x4c\x7d\x2c\xc1\x2f\x07\x46\x9c\xd5\xce\x34\x23\x95\xc9\x01\x27\x1d\x47\x79\xc1\xb8\x4a\xfc\x8e\x01\xd2\x3f\x8f\x83\xc1\x10\x74\x93\xed\x03\xe0\x6f\x8c\xc7\xd2\x85\x60\x3c\xd7\x2b\x2d\x20\x90\xcc\x09\x11\x6b\x88\x48\xec\x44\x6e\x9e\x2c\xab\xb7\xe6\x29\x5b\x52\x0e\x19\x95\x92\x4c\x0f\x40\x83\x7c\x5d\x60\x74\x4d\xda\x8f\x8c\xd6\x78\x8b\x8d\x53\x9d\x10\x1d\x5d\x6c\x00\xcc\x58\xb7\xe0\x73\x2e\x3e\x73\xf3\x7e\x77\x24\xe3\xdd\xf5\x5f\x0c\x97\x3d\x02\x51\x9e\xad\x3a\x8d\x52\xf9\x95\xbe\x19\x89\x45\x11\xd1\xa6\x77\x92\x45\x9a\x76\xbb\xc8\x50\x6f\x9d\xa4\xef\xff\xa2\x50\x90\x13\x35\x83\x98\x15\x34\x52\xe9\x1a\x87\x7b\xfd\x38\xb2\xce\x0f\x45\xad\xe6\x77\xa2\x73\xac\xca\x2f\xe1\x9e\x8a\xf5\xff\x91\x83\x1e\x89\x9a\x75\xb8\x27\xd7\xcb\x2f\xec\x1e\x94\x7d\xa2\x73\xb4\xba\x2f\xe1\x1a\xc3\xf8\x85\x1d\xb3\xf7\x55\x3d\x6c\xbe\x76\xeb\x1f\x30\xc2\x11\x27\x73\xbc\x16\x8f\xc5\x42\x8d\x45\x32\x9e\x88\x05\x8f\xe5\x98\xf2\x45\x36\x3e\x8f\x6b\xe7\xea\xc7\xee\xfa\x65\xbd\xf6\x10\xba\x41\xbf\x45\xd9\x2a\x97\x93\x02\x6f\xc2\xd5\x0f\x7a\xa6\xd8\x31\x79\x94\xab\x6a\xee\x5d\x57\xff\xfe\x5f\x00\xbc\xb2\x9e\x33\x38\x85\xee\xe7\x7c\x18\x0c\xec\x04\xfc\x4e\xc7\x93\x5e\x73\x6d\xc0\x90\x6c\xc4\x5a\xa7\x3d\x7b\x0d\xd8\x72\x3e\x5e\x7f\xa4\xf6\xea\x9f\x0c\xeb\x81\x6c\xdf\xef\x2d\xd6\x8e\xed\xf7\x56\xdf\xa5\x19\x53\x8a\x16\xdb\x03\xf1\xb1\x1d\xb8\x3e\xd1\xcc\x98\x7e\x03\xea\x03\x4d\x13\x7a\xea\x80\x79\x02\xd2\x75\x00\xe7\xe1\xc6\x24\x11\xa6\xe2\x33\x2d\xf4\x13\x66\x59\xf6\x62\xe0\xfc\x2c\x87\x64\x3d\x72\x1c\xaa\x66\xd9\x89\xdd\x8d\x56\xe1\x71\x59\xf7\x00\x7a\x43\x15\x61\xe9\xf1\x70\x3a\x2c\x4f\x2c\x41\xae\x05\x2f\x51\x89\x1a\xfc\xff\x07\x9d\xc2\xb9\xaf\xbe\xe9\x7f\xb0\xfb\xf5\xc7\x9f\x1f\xdf\xee\xf1\xb3\xde\xd7\xa4\x0d\x2f\xaf\x49\x91\x47\xe3\x48\xaf\xb7\x9c\xfc\x24\x0c\xcf\x1e\x07\xeb\xcd\x9f\xa9\xcc\x05\x3f\xe1\xdd\xc6\x32\xf5\x03\xd0\x92\xf5\x85\xcf\x98\x50\x39\x3b\xda\xe3\x8a\xad\x11\x9d\x8e\x8e\x2a\x37\xdb\xef\x6d\x11\xd6\x55\x5e\xd9\x75\x05\xea\x44\xf5\xaf\x4f\x4f\x8f\x7b\x40\xc5\xed\x5d\x4c\x67\x4a\xe5\x7d\x90\x6a\x86\x3d\x88\xe2\xde\x17\x00\x8a\xc7\x9c\xa7\xb0\x03\x10\xd6\x2a\x1f\x85\xe0\x9f\xff\x78\x79\x02\x5a\x0f\xa3\xdb\x15\x53\x7b\xf0\x32\x04\xbb\x88\x09\x39\xa6\x2b\xa6\xbe\x21\x68\x46\x93\xe3\x61\x73\x34\x3f\x0a\xb8\xef\xbd\xdd\x3f\x6d\xe9\xc0\x4d\x3f\x7c\xec\x01\xec\xde\x5c\x78\x9a\x68\x65\xd5\x62\x0b\x28\x4b\xdc\xe8\xd4\xfa\xcf\x40\xe4\x0c\x1b\xb5\x3d\x06\x4e\x61\xdf\x8f\x92\xe5\x77\xe2\x25\xd3\x2a\xd7\x7f\xd3\xec\xbe\x6a\x72\x51\x2b\x48\x96\x84\xa5\x64\x92\x9a\x81\x48\x5b\x70\x2e\xb1\x1a\x36\xdf\x48\x7b\x20\xd3\x90\x36\x01\xd3\x25\xa0\x17\x36\xe3\x83\x76\x78\x99\xc5\xe3\xc2\x49\x73\x38\x0d\x26\xa3\xe5\xa9\x20\x9d\xcb\xfe\xa1\xb4\x2c\xc7\xe7\x12\xb0\x71\x5c\x55\x70\x39\x23\xca\xb0\xf1\x9a\xb8\x0a\xcd\xfb\x39\x7e\xaa\xbd\x1c\x34\xe6\x92\xaa\xeb\xfc\x27\x00\x00\xff\xff\xcd\xe5\xc0\xa6\xb1\x26\x00\x00")

func init() {
	err := CTX.Err()
	if err != nil {
		panic(err)
	}

	var f webdav.File

	var rb *bytes.Reader
	var r *gzip.Reader

	rb = bytes.NewReader(FileEnumTmpl)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "enum.tmpl", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	Handler = &webdav.Handler{
		FileSystem: FS,
		LockSystem: webdav.NewMemLS(),
	}

}

// Open a file
func (hfs *HTTPFS) Open(path string) (http.File, error) {
	path = hfs.Prefix + path

	f, err := FS.OpenFile(CTX, path, os.O_RDONLY, 0644)
	if err != nil {
		return nil, err
	}

	return f, nil
}

// ReadFile is adapTed from ioutil
func ReadFile(path string) ([]byte, error) {
	f, err := FS.OpenFile(CTX, path, os.O_RDONLY, 0644)
	if err != nil {
		return nil, err
	}

	buf := bytes.NewBuffer(make([]byte, 0, bytes.MinRead))

	// If the buffer overflows, we will get bytes.ErrTooLarge.
	// Return that as an error. Any other panic remains.
	defer func() {
		e := recover()
		if e == nil {
			return
		}
		if panicErr, ok := e.(error); ok && panicErr == bytes.ErrTooLarge {
			err = panicErr
		} else {
			panic(e)
		}
	}()
	_, err = buf.ReadFrom(f)
	return buf.Bytes(), err
}

// WriteFile is adapTed from ioutil
func WriteFile(filename string, data []byte, perm os.FileMode) error {
	f, err := FS.OpenFile(CTX, filename, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, perm)
	if err != nil {
		return err
	}
	n, err := f.Write(data)
	if err == nil && n < len(data) {
		err = io.ErrShortWrite
	}
	if err1 := f.Close(); err == nil {
		err = err1
	}
	return err
}

// WalkDirs looks for files in the given dir and returns a list of files in it
// usage for all files in the b0x: WalkDirs("", false)
func WalkDirs(name string, includeDirsInList bool, files ...string) ([]string, error) {
	f, err := FS.OpenFile(CTX, name, os.O_RDONLY, 0)
	if err != nil {
		return nil, err
	}

	fileInfos, err := f.Readdir(0)
	if err != nil {
		return nil, err
	}

	err = f.Close()
	if err != nil {
		return nil, err
	}

	for _, info := range fileInfos {
		filename := path.Join(name, info.Name())

		if includeDirsInList || !info.IsDir() {
			files = append(files, filename)
		}

		if info.IsDir() {
			files, err = WalkDirs(filename, includeDirsInList, files...)
			if err != nil {
				return nil, err
			}
		}
	}

	return files, nil
}
